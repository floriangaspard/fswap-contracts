/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FSwapPool, FSwapPoolInterface } from "../../contracts/FSwapPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "balance0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200118f3803806200118f833981810160405281019062000037919062000118565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506000808190555050506200015f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e082620000b3565b9050919050565b620000f281620000d3565b8114620000fe57600080fd5b50565b6000815190506200011281620000e7565b92915050565b60008060408385031215620001325762000131620000ae565b5b6000620001428582860162000101565b9250506020620001558582860162000101565b9150509250929050565b60805160a051610fa8620001e76000396000818161036f01528181610446015281816104b80152818161051501528181610540015281816105f70152818161067201526107c30152600081816101e601528181610215015281816102400152818161030a0152818161041c015281816104e20152818161062001526107990152610fa86000f3fe60806040526004361061007b5760003560e01c8063c037646a1161004e578063c037646a1461013e578063c45c4f581461015a578063d21220a714610185578063e2bbb158146101b05761007b565b80630787bc27146100805780630dfe1681146100bd5780631a686502146100e85780631c69ad0014610113575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ae9565b6101cc565b6040516100b49190610b2f565b60405180910390f35b3480156100c957600080fd5b506100d26101e4565b6040516100df9190610b59565b60405180910390f35b3480156100f457600080fd5b506100fd610208565b60405161010a9190610b2f565b60405180910390f35b34801561011f57600080fd5b5061012861020e565b6040516101359190610b2f565b60405180910390f35b61015860048036038101906101539190610bd8565b6102f5565b005b34801561016657600080fd5b5061016f61050e565b60405161017c9190610b2f565b60405180910390f35b34801561019157600080fd5b5061019a6105f5565b6040516101a79190610b59565b60405180910390f35b6101ca60048036038101906101c59190610c18565b610619565b005b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b60006102397f000000000000000000000000000000000000000000000000000000000000000061086c565b156102ee577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102979190610b59565b60206040518083038186803b1580156102af57600080fd5b505afa1580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e79190610c6d565b90506102f2565b4790505b90565b600081141561030357600080fd5b600061032e7f000000000000000000000000000000000000000000000000000000000000000061086c565b61035d57826103445761033f61020e565b610358565b8161034d61020e565b6103579190610cc9565b5b610366565b61036561020e565b5b905060006103937f000000000000000000000000000000000000000000000000000000000000000061086c565b6103c35783156103aa576103a561050e565b6103be565b826103b361050e565b6103bd9190610cc9565b5b6103cc565b6103cb61050e565b5b905083156104705760006103e86103e685856103e89190610cfd565b6000546103f59190610d82565b846104009190610cc9565b61040a9190610db3565b6104149190610d82565b9050610440847f00000000000000000000000000000000000000000000000000000000000000006108b5565b61046a817f0000000000000000000000000000000000000000000000000000000000000000610969565b50610508565b60006103e86103e685846104849190610cfd565b6000546104919190610d82565b8561049c9190610cc9565b6104a69190610db3565b6104b09190610d82565b90506104dc847f00000000000000000000000000000000000000000000000000000000000000006108b5565b610506817f0000000000000000000000000000000000000000000000000000000000000000610969565b505b50505050565b60006105397f000000000000000000000000000000000000000000000000000000000000000061086c565b156105ee577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105979190610b59565b60206040518083038186803b1580156105af57600080fd5b505afa1580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e79190610c6d565b90506105f2565b4790505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006106447f000000000000000000000000000000000000000000000000000000000000000061086c565b610660578261065161020e565b61065b9190610cc9565b610669565b61066861020e565b5b905060006106967f000000000000000000000000000000000000000000000000000000000000000061086c565b6106b257826106a361050e565b6106ad9190610cc9565b6106bb565b6106ba61050e565b5b9050600082141580156106cf575060008114155b1561079357808211156107395780826106e89190610d82565b83856106f49190610d82565b14610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b90610e6a565b60405180910390fd5b610792565b81816107459190610d82565b84846107519190610d82565b14610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610e6a565b60405180910390fd5b5b5b6107bd847f00000000000000000000000000000000000000000000000000000000000000006108b5565b6107e7837f00000000000000000000000000000000000000000000000000000000000000006108b5565b600083856107f59190610db3565b9050806000808282546108089190610cfd565b9250508190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461085e9190610cfd565b925050819055505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108ab57600090506108b0565b600190505b919050565b6108be8161086c565b15610958578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161090093929190610e8a565b602060405180830381600087803b15801561091a57600080fd5b505af115801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190610ed6565b50610965565b34821461096457600080fd5b5b5050565b6109728161086c565b15610a0a578073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016109b2929190610f03565b602060405180830381600087803b1580156109cc57600080fd5b505af11580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a049190610ed6565b50610a82565b60003373ffffffffffffffffffffffffffffffffffffffff1683604051610a3090610f5d565b60006040518083038185875af1925050503d8060008114610a6d576040519150601f19603f3d011682016040523d82523d6000602084013e610a72565b606091505b5050905080610a8057600080fd5b505b5050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab682610a8b565b9050919050565b610ac681610aab565b8114610ad157600080fd5b50565b600081359050610ae381610abd565b92915050565b600060208284031215610aff57610afe610a86565b5b6000610b0d84828501610ad4565b91505092915050565b6000819050919050565b610b2981610b16565b82525050565b6000602082019050610b446000830184610b20565b92915050565b610b5381610aab565b82525050565b6000602082019050610b6e6000830184610b4a565b92915050565b60008115159050919050565b610b8981610b74565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b610bb581610b16565b8114610bc057600080fd5b50565b600081359050610bd281610bac565b92915050565b60008060408385031215610bef57610bee610a86565b5b6000610bfd85828601610b97565b9250506020610c0e85828601610bc3565b9150509250929050565b60008060408385031215610c2f57610c2e610a86565b5b6000610c3d85828601610bc3565b9250506020610c4e85828601610bc3565b9150509250929050565b600081519050610c6781610bac565b92915050565b600060208284031215610c8357610c82610a86565b5b6000610c9184828501610c58565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd482610b16565b9150610cdf83610b16565b925082821015610cf257610cf1610c9a565b5b828203905092915050565b6000610d0882610b16565b9150610d1383610b16565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4857610d47610c9a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d8d82610b16565b9150610d9883610b16565b925082610da857610da7610d53565b5b828204905092915050565b6000610dbe82610b16565b9150610dc983610b16565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e0257610e01610c9a565b5b828202905092915050565b600082825260208201905092915050565b7f426164206c697175696469747920726174696f00000000000000000000000000600082015250565b6000610e54601383610e0d565b9150610e5f82610e1e565b602082019050919050565b60006020820190508181036000830152610e8381610e47565b9050919050565b6000606082019050610e9f6000830186610b4a565b610eac6020830185610b4a565b610eb96040830184610b20565b949350505050565b600081519050610ed081610b80565b92915050565b600060208284031215610eec57610eeb610a86565b5b6000610efa84828501610ec1565b91505092915050565b6000604082019050610f186000830185610b4a565b610f256020830184610b20565b9392505050565b600081905092915050565b50565b6000610f47600083610f2c565b9150610f5282610f37565b600082019050919050565b6000610f6882610f3a565b915081905091905056fea2646970667358221220dda06b61ccd222a66a8c73f7d3985573fec318ec24d732ece5a41a9f5b01b2e664736f6c63430008090033";

type FSwapPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FSwapPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FSwapPool__factory extends ContractFactory {
  constructor(...args: FSwapPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FSwapPool> {
    return super.deploy(
      _token0,
      _token1,
      overrides || {}
    ) as Promise<FSwapPool>;
  }
  override getDeployTransaction(
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  override attach(address: string): FSwapPool {
    return super.attach(address) as FSwapPool;
  }
  override connect(signer: Signer): FSwapPool__factory {
    return super.connect(signer) as FSwapPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FSwapPoolInterface {
    return new utils.Interface(_abi) as FSwapPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FSwapPool {
    return new Contract(address, _abi, signerOrProvider) as FSwapPool;
  }
}

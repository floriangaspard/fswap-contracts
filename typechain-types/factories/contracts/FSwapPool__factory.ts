/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FSwapPool, FSwapPoolInterface } from "../../contracts/FSwapPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "balance0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isToken0",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200141d3803806200141d833981810160405281019062000037919062000120565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050600080819055506000600181905550505062000167565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600080604083850312156200013a5762000139620000b6565b5b60006200014a8582860162000109565b92505060206200015d8582860162000109565b9150509250929050565b60805160a051611220620001fd60003960008181610435015281816105840152818161065b015281816106cd0152818161072a015281816107550152818161080c015281816108870152610a0c01526000818161023e0152818161026d015281816102980152818161040b0152818161051f01528181610631015281816106f70152818161083501526109e201526112206000f3fe6080604052600436106100915760003560e01c80639d63848a116100595780639d63848a1461016b578063c037646a14610196578063c45c4f58146101b2578063d21220a7146101dd578063e2bbb1581461020857610091565b80630787bc27146100965780630dfe1681146100d35780631a686502146100fe5780631c69ad00146101295780633ccfd60b14610154575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610d61565b610224565b6040516100ca9190610da7565b60405180910390f35b3480156100df57600080fd5b506100e861023c565b6040516100f59190610dd1565b60405180910390f35b34801561010a57600080fd5b50610113610260565b6040516101209190610da7565b60405180910390f35b34801561013557600080fd5b5061013e610266565b60405161014b9190610da7565b60405180910390f35b34801561016057600080fd5b5061016961034d565b005b34801561017757600080fd5b50610180610504565b60405161018d9190610da7565b60405180910390f35b6101b060048036038101906101ab9190610e50565b61050a565b005b3480156101be57600080fd5b506101c7610723565b6040516101d49190610da7565b60405180910390f35b3480156101e957600080fd5b506101f261080a565b6040516101ff9190610dd1565b60405180910390f35b610222600480360381019061021d9190610e90565b61082e565b005b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b60006102917f0000000000000000000000000000000000000000000000000000000000000000610ae4565b15610346577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102ef9190610dd1565b60206040518083038186803b15801561030757600080fd5b505afa15801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f9190610ee5565b905061034a565b4790505b90565b6000600154670de0b6b3a7640000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103a59190610f41565b6103af9190610fca565b90506000670de0b6b3a76400006103c4610266565b836103cf9190610f41565b6103d99190610fca565b90506000670de0b6b3a76400006103ee610723565b846103f99190610f41565b6104039190610fca565b905061042f827f0000000000000000000000000000000000000000000000000000000000000000610b2d565b610459817f0000000000000000000000000000000000000000000000000000000000000000610b2d565b600081836104679190610f41565b9050600054811161048f57806000808282546104839190610ffb565b92505081905550610497565b600080819055505b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905581836104e6919061102f565b600160008282546104f79190610ffb565b9250508190555050505050565b60015481565b600081141561051857600080fd5b60006105437f0000000000000000000000000000000000000000000000000000000000000000610ae4565b610572578261055957610554610266565b61056d565b81610562610266565b61056c9190610ffb565b5b61057b565b61057a610266565b5b905060006105a87f0000000000000000000000000000000000000000000000000000000000000000610ae4565b6105d85783156105bf576105ba610723565b6105d3565b826105c8610723565b6105d29190610ffb565b5b6105e1565b6105e0610723565b5b905083156106855760006103e86103e685856105fd919061102f565b60005461060a9190610fca565b846106159190610ffb565b61061f9190610f41565b6106299190610fca565b9050610655847f0000000000000000000000000000000000000000000000000000000000000000610c4a565b61067f817f0000000000000000000000000000000000000000000000000000000000000000610b2d565b5061071d565b60006103e86103e68584610699919061102f565b6000546106a69190610fca565b856106b19190610ffb565b6106bb9190610f41565b6106c59190610fca565b90506106f1847f0000000000000000000000000000000000000000000000000000000000000000610c4a565b61071b817f0000000000000000000000000000000000000000000000000000000000000000610b2d565b505b50505050565b600061074e7f0000000000000000000000000000000000000000000000000000000000000000610ae4565b15610803577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107ac9190610dd1565b60206040518083038186803b1580156107c457600080fd5b505afa1580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc9190610ee5565b9050610807565b4790505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006108597f0000000000000000000000000000000000000000000000000000000000000000610ae4565b6108755782610866610266565b6108709190610ffb565b61087e565b61087d610266565b5b905060006108ab7f0000000000000000000000000000000000000000000000000000000000000000610ae4565b6108c757826108b8610723565b6108c29190610ffb565b6108d0565b6108cf610723565b5b9050600082141580156108e4575060008114155b156109dc57808211156109685780612710836109009190610f41565b61090a9190610fca565b83612710866109199190610f41565b6109239190610fca565b14610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a906110e2565b60405180910390fd5b6109db565b81612710826109779190610f41565b6109819190610fca565b84612710856109909190610f41565b61099a9190610fca565b146109da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d1906110e2565b60405180910390fd5b5b5b610a06847f0000000000000000000000000000000000000000000000000000000000000000610c4a565b610a30837f0000000000000000000000000000000000000000000000000000000000000000610c4a565b60008385610a3e9190610f41565b905080600080828254610a51919061102f565b925050819055508385610a64919061102f565b60016000828254610a75919061102f565b925050819055508385610a88919061102f565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ad6919061102f565b925050819055505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b235760009050610b28565b600190505b919050565b610b3681610ae4565b15610bce578073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610b76929190611102565b602060405180830381600087803b158015610b9057600080fd5b505af1158015610ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc89190611140565b50610c46565b60003373ffffffffffffffffffffffffffffffffffffffff1683604051610bf49061119e565b60006040518083038185875af1925050503d8060008114610c31576040519150601f19603f3d011682016040523d82523d6000602084013e610c36565b606091505b5050905080610c4457600080fd5b505b5050565b610c5381610ae4565b15610ced578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610c95939291906111b3565b602060405180830381600087803b158015610caf57600080fd5b505af1158015610cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce79190611140565b50610cfa565b348214610cf957600080fd5b5b5050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2e82610d03565b9050919050565b610d3e81610d23565b8114610d4957600080fd5b50565b600081359050610d5b81610d35565b92915050565b600060208284031215610d7757610d76610cfe565b5b6000610d8584828501610d4c565b91505092915050565b6000819050919050565b610da181610d8e565b82525050565b6000602082019050610dbc6000830184610d98565b92915050565b610dcb81610d23565b82525050565b6000602082019050610de66000830184610dc2565b92915050565b60008115159050919050565b610e0181610dec565b8114610e0c57600080fd5b50565b600081359050610e1e81610df8565b92915050565b610e2d81610d8e565b8114610e3857600080fd5b50565b600081359050610e4a81610e24565b92915050565b60008060408385031215610e6757610e66610cfe565b5b6000610e7585828601610e0f565b9250506020610e8685828601610e3b565b9150509250929050565b60008060408385031215610ea757610ea6610cfe565b5b6000610eb585828601610e3b565b9250506020610ec685828601610e3b565b9150509250929050565b600081519050610edf81610e24565b92915050565b600060208284031215610efb57610efa610cfe565b5b6000610f0984828501610ed0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4c82610d8e565b9150610f5783610d8e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9057610f8f610f12565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fd582610d8e565b9150610fe083610d8e565b925082610ff057610fef610f9b565b5b828204905092915050565b600061100682610d8e565b915061101183610d8e565b92508282101561102457611023610f12565b5b828203905092915050565b600061103a82610d8e565b915061104583610d8e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561107a57611079610f12565b5b828201905092915050565b600082825260208201905092915050565b7f426164206c697175696469747920726174696f00000000000000000000000000600082015250565b60006110cc601383611085565b91506110d782611096565b602082019050919050565b600060208201905081810360008301526110fb816110bf565b9050919050565b60006040820190506111176000830185610dc2565b6111246020830184610d98565b9392505050565b60008151905061113a81610df8565b92915050565b60006020828403121561115657611155610cfe565b5b60006111648482850161112b565b91505092915050565b600081905092915050565b50565b600061118860008361116d565b915061119382611178565b600082019050919050565b60006111a98261117b565b9150819050919050565b60006060820190506111c86000830186610dc2565b6111d56020830185610dc2565b6111e26040830184610d98565b94935050505056fea26469706673582212206799c2ed7f4e0f61b4b1109304b107339b072f3e39cc89b3449a12b30d559b8064736f6c63430008090033";

type FSwapPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FSwapPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FSwapPool__factory extends ContractFactory {
  constructor(...args: FSwapPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FSwapPool> {
    return super.deploy(
      _token0,
      _token1,
      overrides || {}
    ) as Promise<FSwapPool>;
  }
  override getDeployTransaction(
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  override attach(address: string): FSwapPool {
    return super.attach(address) as FSwapPool;
  }
  override connect(signer: Signer): FSwapPool__factory {
    return super.connect(signer) as FSwapPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FSwapPoolInterface {
    return new utils.Interface(_abi) as FSwapPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FSwapPool {
    return new Contract(address, _abi, signerOrProvider) as FSwapPool;
  }
}
